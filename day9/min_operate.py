# -*- coding: utf-8 -*-
"""
变量x从1开始变化，规则是：要么变成x+1，要么变成2*x，问：
若想将x变成整数2015，最少需要多少次变化
dp(n)表示从1到n的最少操作步骤数
若n为奇数，则前一步一定是n-1
若n为偶数，则前一步是n-1 和n/2的操作步数的小者
从后向前算快，大量的数字不用算
dp(n) = dp(n-1) + 1 n是奇数
        min(dp(n-1)), dp(n/2))+1 n是偶数

优化后得到算法2贪心法：
dp(n) = dp(n-1) + 1 n是奇数
        dp(n/2) + 1 n是偶数

算法3：:
    从二进制考虑
    2015的二进制是 11111011111
    对于1：先减1变成0，再右移把0扔掉
    对于0：直接扔掉
    所以(1的次数-1)*2 + 0的次数
    1的次数-1是为了把最高位留下,因为最终要变成1
代码：略
"""

__author__ = 'guyu'
