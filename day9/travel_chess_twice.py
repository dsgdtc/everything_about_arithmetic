# -*- coding: utf-8 -*-
"""
两次走棋盘，没看懂

给定m*n的矩阵,每个位置为非负权值，机器人从左上角开始走
每次只能朝右或者下走，走到右下角，然后返回，返回时
只能向上或左，走回左上角。求权值总和最大的路径
若相同格子走过两次，则该位置权值只计算一次

算法：
    2个机器人都从左上走，计算两个机器人经过的格子的加和，哪个加和最大
    哪个就是结果

    定义C[i][j]表示的值V表示第V步能够到达的位置
    整个网格的步数类似一个三角形
    比如c[5][2]表示经过了5步而到达的第2列

    用dp[s][x1][x2]记录两次所走的路径的最大值
    s表示经过的步数，
    x1表示第一个机器人在s步后走到的位置
    x2表示第一个机器人在s步后走到的位置
    状态转移方程见课件P62....


"""
__author__ = 'guyu'
